#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1273177161694806375) {
   out_1273177161694806375[0] = 0;
   out_1273177161694806375[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1273177161694806375[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1273177161694806375[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1273177161694806375[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1273177161694806375[5] = -sin(in_vec[1]);
   out_1273177161694806375[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1273177161694806375[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1273177161694806375[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1273177161694806375[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1273177161694806375[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1273177161694806375[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1273177161694806375[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1273177161694806375[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1273177161694806375[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1273177161694806375[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1273177161694806375[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1273177161694806375[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1430031797466046139) {
   out_1430031797466046139[0] = delta_x[0] + nom_x[0];
   out_1430031797466046139[1] = delta_x[1] + nom_x[1];
   out_1430031797466046139[2] = delta_x[2] + nom_x[2];
   out_1430031797466046139[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1430031797466046139[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1430031797466046139[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1430031797466046139[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1430031797466046139[7] = delta_x[6] + nom_x[7];
   out_1430031797466046139[8] = delta_x[7] + nom_x[8];
   out_1430031797466046139[9] = delta_x[8] + nom_x[9];
   out_1430031797466046139[10] = delta_x[9] + nom_x[10];
   out_1430031797466046139[11] = delta_x[10] + nom_x[11];
   out_1430031797466046139[12] = delta_x[11] + nom_x[12];
   out_1430031797466046139[13] = delta_x[12] + nom_x[13];
   out_1430031797466046139[14] = delta_x[13] + nom_x[14];
   out_1430031797466046139[15] = delta_x[14] + nom_x[15];
   out_1430031797466046139[16] = delta_x[15] + nom_x[16];
   out_1430031797466046139[17] = delta_x[16] + nom_x[17];
   out_1430031797466046139[18] = delta_x[17] + nom_x[18];
   out_1430031797466046139[19] = delta_x[18] + nom_x[19];
   out_1430031797466046139[20] = delta_x[19] + nom_x[20];
   out_1430031797466046139[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4212555668691755734) {
   out_4212555668691755734[0] = -nom_x[0] + true_x[0];
   out_4212555668691755734[1] = -nom_x[1] + true_x[1];
   out_4212555668691755734[2] = -nom_x[2] + true_x[2];
   out_4212555668691755734[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4212555668691755734[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4212555668691755734[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4212555668691755734[6] = -nom_x[7] + true_x[7];
   out_4212555668691755734[7] = -nom_x[8] + true_x[8];
   out_4212555668691755734[8] = -nom_x[9] + true_x[9];
   out_4212555668691755734[9] = -nom_x[10] + true_x[10];
   out_4212555668691755734[10] = -nom_x[11] + true_x[11];
   out_4212555668691755734[11] = -nom_x[12] + true_x[12];
   out_4212555668691755734[12] = -nom_x[13] + true_x[13];
   out_4212555668691755734[13] = -nom_x[14] + true_x[14];
   out_4212555668691755734[14] = -nom_x[15] + true_x[15];
   out_4212555668691755734[15] = -nom_x[16] + true_x[16];
   out_4212555668691755734[16] = -nom_x[17] + true_x[17];
   out_4212555668691755734[17] = -nom_x[18] + true_x[18];
   out_4212555668691755734[18] = -nom_x[19] + true_x[19];
   out_4212555668691755734[19] = -nom_x[20] + true_x[20];
   out_4212555668691755734[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5495397011748731228) {
   out_5495397011748731228[0] = 1.0;
   out_5495397011748731228[1] = 0;
   out_5495397011748731228[2] = 0;
   out_5495397011748731228[3] = 0;
   out_5495397011748731228[4] = 0;
   out_5495397011748731228[5] = 0;
   out_5495397011748731228[6] = 0;
   out_5495397011748731228[7] = 0;
   out_5495397011748731228[8] = 0;
   out_5495397011748731228[9] = 0;
   out_5495397011748731228[10] = 0;
   out_5495397011748731228[11] = 0;
   out_5495397011748731228[12] = 0;
   out_5495397011748731228[13] = 0;
   out_5495397011748731228[14] = 0;
   out_5495397011748731228[15] = 0;
   out_5495397011748731228[16] = 0;
   out_5495397011748731228[17] = 0;
   out_5495397011748731228[18] = 0;
   out_5495397011748731228[19] = 0;
   out_5495397011748731228[20] = 0;
   out_5495397011748731228[21] = 0;
   out_5495397011748731228[22] = 1.0;
   out_5495397011748731228[23] = 0;
   out_5495397011748731228[24] = 0;
   out_5495397011748731228[25] = 0;
   out_5495397011748731228[26] = 0;
   out_5495397011748731228[27] = 0;
   out_5495397011748731228[28] = 0;
   out_5495397011748731228[29] = 0;
   out_5495397011748731228[30] = 0;
   out_5495397011748731228[31] = 0;
   out_5495397011748731228[32] = 0;
   out_5495397011748731228[33] = 0;
   out_5495397011748731228[34] = 0;
   out_5495397011748731228[35] = 0;
   out_5495397011748731228[36] = 0;
   out_5495397011748731228[37] = 0;
   out_5495397011748731228[38] = 0;
   out_5495397011748731228[39] = 0;
   out_5495397011748731228[40] = 0;
   out_5495397011748731228[41] = 0;
   out_5495397011748731228[42] = 0;
   out_5495397011748731228[43] = 0;
   out_5495397011748731228[44] = 1.0;
   out_5495397011748731228[45] = 0;
   out_5495397011748731228[46] = 0;
   out_5495397011748731228[47] = 0;
   out_5495397011748731228[48] = 0;
   out_5495397011748731228[49] = 0;
   out_5495397011748731228[50] = 0;
   out_5495397011748731228[51] = 0;
   out_5495397011748731228[52] = 0;
   out_5495397011748731228[53] = 0;
   out_5495397011748731228[54] = 0;
   out_5495397011748731228[55] = 0;
   out_5495397011748731228[56] = 0;
   out_5495397011748731228[57] = 0;
   out_5495397011748731228[58] = 0;
   out_5495397011748731228[59] = 0;
   out_5495397011748731228[60] = 0;
   out_5495397011748731228[61] = 0;
   out_5495397011748731228[62] = 0;
   out_5495397011748731228[63] = 0;
   out_5495397011748731228[64] = 0;
   out_5495397011748731228[65] = 0;
   out_5495397011748731228[66] = -0.5*state[4];
   out_5495397011748731228[67] = -0.5*state[5];
   out_5495397011748731228[68] = -0.5*state[6];
   out_5495397011748731228[69] = 0;
   out_5495397011748731228[70] = 0;
   out_5495397011748731228[71] = 0;
   out_5495397011748731228[72] = 0;
   out_5495397011748731228[73] = 0;
   out_5495397011748731228[74] = 0;
   out_5495397011748731228[75] = 0;
   out_5495397011748731228[76] = 0;
   out_5495397011748731228[77] = 0;
   out_5495397011748731228[78] = 0;
   out_5495397011748731228[79] = 0;
   out_5495397011748731228[80] = 0;
   out_5495397011748731228[81] = 0;
   out_5495397011748731228[82] = 0;
   out_5495397011748731228[83] = 0;
   out_5495397011748731228[84] = 0;
   out_5495397011748731228[85] = 0;
   out_5495397011748731228[86] = 0;
   out_5495397011748731228[87] = 0.5*state[3];
   out_5495397011748731228[88] = 0.5*state[6];
   out_5495397011748731228[89] = -0.5*state[5];
   out_5495397011748731228[90] = 0;
   out_5495397011748731228[91] = 0;
   out_5495397011748731228[92] = 0;
   out_5495397011748731228[93] = 0;
   out_5495397011748731228[94] = 0;
   out_5495397011748731228[95] = 0;
   out_5495397011748731228[96] = 0;
   out_5495397011748731228[97] = 0;
   out_5495397011748731228[98] = 0;
   out_5495397011748731228[99] = 0;
   out_5495397011748731228[100] = 0;
   out_5495397011748731228[101] = 0;
   out_5495397011748731228[102] = 0;
   out_5495397011748731228[103] = 0;
   out_5495397011748731228[104] = 0;
   out_5495397011748731228[105] = 0;
   out_5495397011748731228[106] = 0;
   out_5495397011748731228[107] = 0;
   out_5495397011748731228[108] = -0.5*state[6];
   out_5495397011748731228[109] = 0.5*state[3];
   out_5495397011748731228[110] = 0.5*state[4];
   out_5495397011748731228[111] = 0;
   out_5495397011748731228[112] = 0;
   out_5495397011748731228[113] = 0;
   out_5495397011748731228[114] = 0;
   out_5495397011748731228[115] = 0;
   out_5495397011748731228[116] = 0;
   out_5495397011748731228[117] = 0;
   out_5495397011748731228[118] = 0;
   out_5495397011748731228[119] = 0;
   out_5495397011748731228[120] = 0;
   out_5495397011748731228[121] = 0;
   out_5495397011748731228[122] = 0;
   out_5495397011748731228[123] = 0;
   out_5495397011748731228[124] = 0;
   out_5495397011748731228[125] = 0;
   out_5495397011748731228[126] = 0;
   out_5495397011748731228[127] = 0;
   out_5495397011748731228[128] = 0;
   out_5495397011748731228[129] = 0.5*state[5];
   out_5495397011748731228[130] = -0.5*state[4];
   out_5495397011748731228[131] = 0.5*state[3];
   out_5495397011748731228[132] = 0;
   out_5495397011748731228[133] = 0;
   out_5495397011748731228[134] = 0;
   out_5495397011748731228[135] = 0;
   out_5495397011748731228[136] = 0;
   out_5495397011748731228[137] = 0;
   out_5495397011748731228[138] = 0;
   out_5495397011748731228[139] = 0;
   out_5495397011748731228[140] = 0;
   out_5495397011748731228[141] = 0;
   out_5495397011748731228[142] = 0;
   out_5495397011748731228[143] = 0;
   out_5495397011748731228[144] = 0;
   out_5495397011748731228[145] = 0;
   out_5495397011748731228[146] = 0;
   out_5495397011748731228[147] = 0;
   out_5495397011748731228[148] = 0;
   out_5495397011748731228[149] = 0;
   out_5495397011748731228[150] = 0;
   out_5495397011748731228[151] = 0;
   out_5495397011748731228[152] = 0;
   out_5495397011748731228[153] = 1.0;
   out_5495397011748731228[154] = 0;
   out_5495397011748731228[155] = 0;
   out_5495397011748731228[156] = 0;
   out_5495397011748731228[157] = 0;
   out_5495397011748731228[158] = 0;
   out_5495397011748731228[159] = 0;
   out_5495397011748731228[160] = 0;
   out_5495397011748731228[161] = 0;
   out_5495397011748731228[162] = 0;
   out_5495397011748731228[163] = 0;
   out_5495397011748731228[164] = 0;
   out_5495397011748731228[165] = 0;
   out_5495397011748731228[166] = 0;
   out_5495397011748731228[167] = 0;
   out_5495397011748731228[168] = 0;
   out_5495397011748731228[169] = 0;
   out_5495397011748731228[170] = 0;
   out_5495397011748731228[171] = 0;
   out_5495397011748731228[172] = 0;
   out_5495397011748731228[173] = 0;
   out_5495397011748731228[174] = 0;
   out_5495397011748731228[175] = 1.0;
   out_5495397011748731228[176] = 0;
   out_5495397011748731228[177] = 0;
   out_5495397011748731228[178] = 0;
   out_5495397011748731228[179] = 0;
   out_5495397011748731228[180] = 0;
   out_5495397011748731228[181] = 0;
   out_5495397011748731228[182] = 0;
   out_5495397011748731228[183] = 0;
   out_5495397011748731228[184] = 0;
   out_5495397011748731228[185] = 0;
   out_5495397011748731228[186] = 0;
   out_5495397011748731228[187] = 0;
   out_5495397011748731228[188] = 0;
   out_5495397011748731228[189] = 0;
   out_5495397011748731228[190] = 0;
   out_5495397011748731228[191] = 0;
   out_5495397011748731228[192] = 0;
   out_5495397011748731228[193] = 0;
   out_5495397011748731228[194] = 0;
   out_5495397011748731228[195] = 0;
   out_5495397011748731228[196] = 0;
   out_5495397011748731228[197] = 1.0;
   out_5495397011748731228[198] = 0;
   out_5495397011748731228[199] = 0;
   out_5495397011748731228[200] = 0;
   out_5495397011748731228[201] = 0;
   out_5495397011748731228[202] = 0;
   out_5495397011748731228[203] = 0;
   out_5495397011748731228[204] = 0;
   out_5495397011748731228[205] = 0;
   out_5495397011748731228[206] = 0;
   out_5495397011748731228[207] = 0;
   out_5495397011748731228[208] = 0;
   out_5495397011748731228[209] = 0;
   out_5495397011748731228[210] = 0;
   out_5495397011748731228[211] = 0;
   out_5495397011748731228[212] = 0;
   out_5495397011748731228[213] = 0;
   out_5495397011748731228[214] = 0;
   out_5495397011748731228[215] = 0;
   out_5495397011748731228[216] = 0;
   out_5495397011748731228[217] = 0;
   out_5495397011748731228[218] = 0;
   out_5495397011748731228[219] = 1.0;
   out_5495397011748731228[220] = 0;
   out_5495397011748731228[221] = 0;
   out_5495397011748731228[222] = 0;
   out_5495397011748731228[223] = 0;
   out_5495397011748731228[224] = 0;
   out_5495397011748731228[225] = 0;
   out_5495397011748731228[226] = 0;
   out_5495397011748731228[227] = 0;
   out_5495397011748731228[228] = 0;
   out_5495397011748731228[229] = 0;
   out_5495397011748731228[230] = 0;
   out_5495397011748731228[231] = 0;
   out_5495397011748731228[232] = 0;
   out_5495397011748731228[233] = 0;
   out_5495397011748731228[234] = 0;
   out_5495397011748731228[235] = 0;
   out_5495397011748731228[236] = 0;
   out_5495397011748731228[237] = 0;
   out_5495397011748731228[238] = 0;
   out_5495397011748731228[239] = 0;
   out_5495397011748731228[240] = 0;
   out_5495397011748731228[241] = 1.0;
   out_5495397011748731228[242] = 0;
   out_5495397011748731228[243] = 0;
   out_5495397011748731228[244] = 0;
   out_5495397011748731228[245] = 0;
   out_5495397011748731228[246] = 0;
   out_5495397011748731228[247] = 0;
   out_5495397011748731228[248] = 0;
   out_5495397011748731228[249] = 0;
   out_5495397011748731228[250] = 0;
   out_5495397011748731228[251] = 0;
   out_5495397011748731228[252] = 0;
   out_5495397011748731228[253] = 0;
   out_5495397011748731228[254] = 0;
   out_5495397011748731228[255] = 0;
   out_5495397011748731228[256] = 0;
   out_5495397011748731228[257] = 0;
   out_5495397011748731228[258] = 0;
   out_5495397011748731228[259] = 0;
   out_5495397011748731228[260] = 0;
   out_5495397011748731228[261] = 0;
   out_5495397011748731228[262] = 0;
   out_5495397011748731228[263] = 1.0;
   out_5495397011748731228[264] = 0;
   out_5495397011748731228[265] = 0;
   out_5495397011748731228[266] = 0;
   out_5495397011748731228[267] = 0;
   out_5495397011748731228[268] = 0;
   out_5495397011748731228[269] = 0;
   out_5495397011748731228[270] = 0;
   out_5495397011748731228[271] = 0;
   out_5495397011748731228[272] = 0;
   out_5495397011748731228[273] = 0;
   out_5495397011748731228[274] = 0;
   out_5495397011748731228[275] = 0;
   out_5495397011748731228[276] = 0;
   out_5495397011748731228[277] = 0;
   out_5495397011748731228[278] = 0;
   out_5495397011748731228[279] = 0;
   out_5495397011748731228[280] = 0;
   out_5495397011748731228[281] = 0;
   out_5495397011748731228[282] = 0;
   out_5495397011748731228[283] = 0;
   out_5495397011748731228[284] = 0;
   out_5495397011748731228[285] = 1.0;
   out_5495397011748731228[286] = 0;
   out_5495397011748731228[287] = 0;
   out_5495397011748731228[288] = 0;
   out_5495397011748731228[289] = 0;
   out_5495397011748731228[290] = 0;
   out_5495397011748731228[291] = 0;
   out_5495397011748731228[292] = 0;
   out_5495397011748731228[293] = 0;
   out_5495397011748731228[294] = 0;
   out_5495397011748731228[295] = 0;
   out_5495397011748731228[296] = 0;
   out_5495397011748731228[297] = 0;
   out_5495397011748731228[298] = 0;
   out_5495397011748731228[299] = 0;
   out_5495397011748731228[300] = 0;
   out_5495397011748731228[301] = 0;
   out_5495397011748731228[302] = 0;
   out_5495397011748731228[303] = 0;
   out_5495397011748731228[304] = 0;
   out_5495397011748731228[305] = 0;
   out_5495397011748731228[306] = 0;
   out_5495397011748731228[307] = 1.0;
   out_5495397011748731228[308] = 0;
   out_5495397011748731228[309] = 0;
   out_5495397011748731228[310] = 0;
   out_5495397011748731228[311] = 0;
   out_5495397011748731228[312] = 0;
   out_5495397011748731228[313] = 0;
   out_5495397011748731228[314] = 0;
   out_5495397011748731228[315] = 0;
   out_5495397011748731228[316] = 0;
   out_5495397011748731228[317] = 0;
   out_5495397011748731228[318] = 0;
   out_5495397011748731228[319] = 0;
   out_5495397011748731228[320] = 0;
   out_5495397011748731228[321] = 0;
   out_5495397011748731228[322] = 0;
   out_5495397011748731228[323] = 0;
   out_5495397011748731228[324] = 0;
   out_5495397011748731228[325] = 0;
   out_5495397011748731228[326] = 0;
   out_5495397011748731228[327] = 0;
   out_5495397011748731228[328] = 0;
   out_5495397011748731228[329] = 1.0;
   out_5495397011748731228[330] = 0;
   out_5495397011748731228[331] = 0;
   out_5495397011748731228[332] = 0;
   out_5495397011748731228[333] = 0;
   out_5495397011748731228[334] = 0;
   out_5495397011748731228[335] = 0;
   out_5495397011748731228[336] = 0;
   out_5495397011748731228[337] = 0;
   out_5495397011748731228[338] = 0;
   out_5495397011748731228[339] = 0;
   out_5495397011748731228[340] = 0;
   out_5495397011748731228[341] = 0;
   out_5495397011748731228[342] = 0;
   out_5495397011748731228[343] = 0;
   out_5495397011748731228[344] = 0;
   out_5495397011748731228[345] = 0;
   out_5495397011748731228[346] = 0;
   out_5495397011748731228[347] = 0;
   out_5495397011748731228[348] = 0;
   out_5495397011748731228[349] = 0;
   out_5495397011748731228[350] = 0;
   out_5495397011748731228[351] = 1.0;
   out_5495397011748731228[352] = 0;
   out_5495397011748731228[353] = 0;
   out_5495397011748731228[354] = 0;
   out_5495397011748731228[355] = 0;
   out_5495397011748731228[356] = 0;
   out_5495397011748731228[357] = 0;
   out_5495397011748731228[358] = 0;
   out_5495397011748731228[359] = 0;
   out_5495397011748731228[360] = 0;
   out_5495397011748731228[361] = 0;
   out_5495397011748731228[362] = 0;
   out_5495397011748731228[363] = 0;
   out_5495397011748731228[364] = 0;
   out_5495397011748731228[365] = 0;
   out_5495397011748731228[366] = 0;
   out_5495397011748731228[367] = 0;
   out_5495397011748731228[368] = 0;
   out_5495397011748731228[369] = 0;
   out_5495397011748731228[370] = 0;
   out_5495397011748731228[371] = 0;
   out_5495397011748731228[372] = 0;
   out_5495397011748731228[373] = 1.0;
   out_5495397011748731228[374] = 0;
   out_5495397011748731228[375] = 0;
   out_5495397011748731228[376] = 0;
   out_5495397011748731228[377] = 0;
   out_5495397011748731228[378] = 0;
   out_5495397011748731228[379] = 0;
   out_5495397011748731228[380] = 0;
   out_5495397011748731228[381] = 0;
   out_5495397011748731228[382] = 0;
   out_5495397011748731228[383] = 0;
   out_5495397011748731228[384] = 0;
   out_5495397011748731228[385] = 0;
   out_5495397011748731228[386] = 0;
   out_5495397011748731228[387] = 0;
   out_5495397011748731228[388] = 0;
   out_5495397011748731228[389] = 0;
   out_5495397011748731228[390] = 0;
   out_5495397011748731228[391] = 0;
   out_5495397011748731228[392] = 0;
   out_5495397011748731228[393] = 0;
   out_5495397011748731228[394] = 0;
   out_5495397011748731228[395] = 1.0;
   out_5495397011748731228[396] = 0;
   out_5495397011748731228[397] = 0;
   out_5495397011748731228[398] = 0;
   out_5495397011748731228[399] = 0;
   out_5495397011748731228[400] = 0;
   out_5495397011748731228[401] = 0;
   out_5495397011748731228[402] = 0;
   out_5495397011748731228[403] = 0;
   out_5495397011748731228[404] = 0;
   out_5495397011748731228[405] = 0;
   out_5495397011748731228[406] = 0;
   out_5495397011748731228[407] = 0;
   out_5495397011748731228[408] = 0;
   out_5495397011748731228[409] = 0;
   out_5495397011748731228[410] = 0;
   out_5495397011748731228[411] = 0;
   out_5495397011748731228[412] = 0;
   out_5495397011748731228[413] = 0;
   out_5495397011748731228[414] = 0;
   out_5495397011748731228[415] = 0;
   out_5495397011748731228[416] = 0;
   out_5495397011748731228[417] = 1.0;
   out_5495397011748731228[418] = 0;
   out_5495397011748731228[419] = 0;
   out_5495397011748731228[420] = 0;
   out_5495397011748731228[421] = 0;
   out_5495397011748731228[422] = 0;
   out_5495397011748731228[423] = 0;
   out_5495397011748731228[424] = 0;
   out_5495397011748731228[425] = 0;
   out_5495397011748731228[426] = 0;
   out_5495397011748731228[427] = 0;
   out_5495397011748731228[428] = 0;
   out_5495397011748731228[429] = 0;
   out_5495397011748731228[430] = 0;
   out_5495397011748731228[431] = 0;
   out_5495397011748731228[432] = 0;
   out_5495397011748731228[433] = 0;
   out_5495397011748731228[434] = 0;
   out_5495397011748731228[435] = 0;
   out_5495397011748731228[436] = 0;
   out_5495397011748731228[437] = 0;
   out_5495397011748731228[438] = 0;
   out_5495397011748731228[439] = 1.0;
   out_5495397011748731228[440] = 0;
   out_5495397011748731228[441] = 0;
   out_5495397011748731228[442] = 0;
   out_5495397011748731228[443] = 0;
   out_5495397011748731228[444] = 0;
   out_5495397011748731228[445] = 0;
   out_5495397011748731228[446] = 0;
   out_5495397011748731228[447] = 0;
   out_5495397011748731228[448] = 0;
   out_5495397011748731228[449] = 0;
   out_5495397011748731228[450] = 0;
   out_5495397011748731228[451] = 0;
   out_5495397011748731228[452] = 0;
   out_5495397011748731228[453] = 0;
   out_5495397011748731228[454] = 0;
   out_5495397011748731228[455] = 0;
   out_5495397011748731228[456] = 0;
   out_5495397011748731228[457] = 0;
   out_5495397011748731228[458] = 0;
   out_5495397011748731228[459] = 0;
   out_5495397011748731228[460] = 0;
   out_5495397011748731228[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7830183483826484002) {
   out_7830183483826484002[0] = dt*state[7] + state[0];
   out_7830183483826484002[1] = dt*state[8] + state[1];
   out_7830183483826484002[2] = dt*state[9] + state[2];
   out_7830183483826484002[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7830183483826484002[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7830183483826484002[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7830183483826484002[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7830183483826484002[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7830183483826484002[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7830183483826484002[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7830183483826484002[10] = state[10];
   out_7830183483826484002[11] = state[11];
   out_7830183483826484002[12] = state[12];
   out_7830183483826484002[13] = state[13];
   out_7830183483826484002[14] = state[14];
   out_7830183483826484002[15] = state[15];
   out_7830183483826484002[16] = state[16];
   out_7830183483826484002[17] = state[17];
   out_7830183483826484002[18] = state[18];
   out_7830183483826484002[19] = state[19];
   out_7830183483826484002[20] = state[20];
   out_7830183483826484002[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9021355042514805664) {
   out_9021355042514805664[0] = 1;
   out_9021355042514805664[1] = 0;
   out_9021355042514805664[2] = 0;
   out_9021355042514805664[3] = 0;
   out_9021355042514805664[4] = 0;
   out_9021355042514805664[5] = 0;
   out_9021355042514805664[6] = dt;
   out_9021355042514805664[7] = 0;
   out_9021355042514805664[8] = 0;
   out_9021355042514805664[9] = 0;
   out_9021355042514805664[10] = 0;
   out_9021355042514805664[11] = 0;
   out_9021355042514805664[12] = 0;
   out_9021355042514805664[13] = 0;
   out_9021355042514805664[14] = 0;
   out_9021355042514805664[15] = 0;
   out_9021355042514805664[16] = 0;
   out_9021355042514805664[17] = 0;
   out_9021355042514805664[18] = 0;
   out_9021355042514805664[19] = 0;
   out_9021355042514805664[20] = 0;
   out_9021355042514805664[21] = 0;
   out_9021355042514805664[22] = 1;
   out_9021355042514805664[23] = 0;
   out_9021355042514805664[24] = 0;
   out_9021355042514805664[25] = 0;
   out_9021355042514805664[26] = 0;
   out_9021355042514805664[27] = 0;
   out_9021355042514805664[28] = dt;
   out_9021355042514805664[29] = 0;
   out_9021355042514805664[30] = 0;
   out_9021355042514805664[31] = 0;
   out_9021355042514805664[32] = 0;
   out_9021355042514805664[33] = 0;
   out_9021355042514805664[34] = 0;
   out_9021355042514805664[35] = 0;
   out_9021355042514805664[36] = 0;
   out_9021355042514805664[37] = 0;
   out_9021355042514805664[38] = 0;
   out_9021355042514805664[39] = 0;
   out_9021355042514805664[40] = 0;
   out_9021355042514805664[41] = 0;
   out_9021355042514805664[42] = 0;
   out_9021355042514805664[43] = 0;
   out_9021355042514805664[44] = 1;
   out_9021355042514805664[45] = 0;
   out_9021355042514805664[46] = 0;
   out_9021355042514805664[47] = 0;
   out_9021355042514805664[48] = 0;
   out_9021355042514805664[49] = 0;
   out_9021355042514805664[50] = dt;
   out_9021355042514805664[51] = 0;
   out_9021355042514805664[52] = 0;
   out_9021355042514805664[53] = 0;
   out_9021355042514805664[54] = 0;
   out_9021355042514805664[55] = 0;
   out_9021355042514805664[56] = 0;
   out_9021355042514805664[57] = 0;
   out_9021355042514805664[58] = 0;
   out_9021355042514805664[59] = 0;
   out_9021355042514805664[60] = 0;
   out_9021355042514805664[61] = 0;
   out_9021355042514805664[62] = 0;
   out_9021355042514805664[63] = 0;
   out_9021355042514805664[64] = 0;
   out_9021355042514805664[65] = 0;
   out_9021355042514805664[66] = 1;
   out_9021355042514805664[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9021355042514805664[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9021355042514805664[69] = 0;
   out_9021355042514805664[70] = 0;
   out_9021355042514805664[71] = 0;
   out_9021355042514805664[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9021355042514805664[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9021355042514805664[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9021355042514805664[75] = 0;
   out_9021355042514805664[76] = 0;
   out_9021355042514805664[77] = 0;
   out_9021355042514805664[78] = 0;
   out_9021355042514805664[79] = 0;
   out_9021355042514805664[80] = 0;
   out_9021355042514805664[81] = 0;
   out_9021355042514805664[82] = 0;
   out_9021355042514805664[83] = 0;
   out_9021355042514805664[84] = 0;
   out_9021355042514805664[85] = 0;
   out_9021355042514805664[86] = 0;
   out_9021355042514805664[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9021355042514805664[88] = 1;
   out_9021355042514805664[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9021355042514805664[90] = 0;
   out_9021355042514805664[91] = 0;
   out_9021355042514805664[92] = 0;
   out_9021355042514805664[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9021355042514805664[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9021355042514805664[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9021355042514805664[96] = 0;
   out_9021355042514805664[97] = 0;
   out_9021355042514805664[98] = 0;
   out_9021355042514805664[99] = 0;
   out_9021355042514805664[100] = 0;
   out_9021355042514805664[101] = 0;
   out_9021355042514805664[102] = 0;
   out_9021355042514805664[103] = 0;
   out_9021355042514805664[104] = 0;
   out_9021355042514805664[105] = 0;
   out_9021355042514805664[106] = 0;
   out_9021355042514805664[107] = 0;
   out_9021355042514805664[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9021355042514805664[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9021355042514805664[110] = 1;
   out_9021355042514805664[111] = 0;
   out_9021355042514805664[112] = 0;
   out_9021355042514805664[113] = 0;
   out_9021355042514805664[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9021355042514805664[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9021355042514805664[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9021355042514805664[117] = 0;
   out_9021355042514805664[118] = 0;
   out_9021355042514805664[119] = 0;
   out_9021355042514805664[120] = 0;
   out_9021355042514805664[121] = 0;
   out_9021355042514805664[122] = 0;
   out_9021355042514805664[123] = 0;
   out_9021355042514805664[124] = 0;
   out_9021355042514805664[125] = 0;
   out_9021355042514805664[126] = 0;
   out_9021355042514805664[127] = 0;
   out_9021355042514805664[128] = 0;
   out_9021355042514805664[129] = 0;
   out_9021355042514805664[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9021355042514805664[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9021355042514805664[132] = 1;
   out_9021355042514805664[133] = 0;
   out_9021355042514805664[134] = 0;
   out_9021355042514805664[135] = 0;
   out_9021355042514805664[136] = 0;
   out_9021355042514805664[137] = 0;
   out_9021355042514805664[138] = 0;
   out_9021355042514805664[139] = 0;
   out_9021355042514805664[140] = 0;
   out_9021355042514805664[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9021355042514805664[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9021355042514805664[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9021355042514805664[144] = 0;
   out_9021355042514805664[145] = 0;
   out_9021355042514805664[146] = 0;
   out_9021355042514805664[147] = 0;
   out_9021355042514805664[148] = 0;
   out_9021355042514805664[149] = 0;
   out_9021355042514805664[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9021355042514805664[151] = 0;
   out_9021355042514805664[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9021355042514805664[153] = 0;
   out_9021355042514805664[154] = 1;
   out_9021355042514805664[155] = 0;
   out_9021355042514805664[156] = 0;
   out_9021355042514805664[157] = 0;
   out_9021355042514805664[158] = 0;
   out_9021355042514805664[159] = 0;
   out_9021355042514805664[160] = 0;
   out_9021355042514805664[161] = 0;
   out_9021355042514805664[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9021355042514805664[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9021355042514805664[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9021355042514805664[165] = 0;
   out_9021355042514805664[166] = 0;
   out_9021355042514805664[167] = 0;
   out_9021355042514805664[168] = 0;
   out_9021355042514805664[169] = 0;
   out_9021355042514805664[170] = 0;
   out_9021355042514805664[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9021355042514805664[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9021355042514805664[173] = 0;
   out_9021355042514805664[174] = 0;
   out_9021355042514805664[175] = 0;
   out_9021355042514805664[176] = 1;
   out_9021355042514805664[177] = 0;
   out_9021355042514805664[178] = 0;
   out_9021355042514805664[179] = 0;
   out_9021355042514805664[180] = 0;
   out_9021355042514805664[181] = 0;
   out_9021355042514805664[182] = 0;
   out_9021355042514805664[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9021355042514805664[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9021355042514805664[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9021355042514805664[186] = 0;
   out_9021355042514805664[187] = 0;
   out_9021355042514805664[188] = 0;
   out_9021355042514805664[189] = 0;
   out_9021355042514805664[190] = 0;
   out_9021355042514805664[191] = 0;
   out_9021355042514805664[192] = 0;
   out_9021355042514805664[193] = 0;
   out_9021355042514805664[194] = 0;
   out_9021355042514805664[195] = 0;
   out_9021355042514805664[196] = 0;
   out_9021355042514805664[197] = 0;
   out_9021355042514805664[198] = 1;
   out_9021355042514805664[199] = 0;
   out_9021355042514805664[200] = 0;
   out_9021355042514805664[201] = 0;
   out_9021355042514805664[202] = 0;
   out_9021355042514805664[203] = 0;
   out_9021355042514805664[204] = 0;
   out_9021355042514805664[205] = 0;
   out_9021355042514805664[206] = 0;
   out_9021355042514805664[207] = 0;
   out_9021355042514805664[208] = 0;
   out_9021355042514805664[209] = 0;
   out_9021355042514805664[210] = 0;
   out_9021355042514805664[211] = 0;
   out_9021355042514805664[212] = 0;
   out_9021355042514805664[213] = 0;
   out_9021355042514805664[214] = 0;
   out_9021355042514805664[215] = 0;
   out_9021355042514805664[216] = 0;
   out_9021355042514805664[217] = 0;
   out_9021355042514805664[218] = 0;
   out_9021355042514805664[219] = 0;
   out_9021355042514805664[220] = 1;
   out_9021355042514805664[221] = 0;
   out_9021355042514805664[222] = 0;
   out_9021355042514805664[223] = 0;
   out_9021355042514805664[224] = 0;
   out_9021355042514805664[225] = 0;
   out_9021355042514805664[226] = 0;
   out_9021355042514805664[227] = 0;
   out_9021355042514805664[228] = 0;
   out_9021355042514805664[229] = 0;
   out_9021355042514805664[230] = 0;
   out_9021355042514805664[231] = 0;
   out_9021355042514805664[232] = 0;
   out_9021355042514805664[233] = 0;
   out_9021355042514805664[234] = 0;
   out_9021355042514805664[235] = 0;
   out_9021355042514805664[236] = 0;
   out_9021355042514805664[237] = 0;
   out_9021355042514805664[238] = 0;
   out_9021355042514805664[239] = 0;
   out_9021355042514805664[240] = 0;
   out_9021355042514805664[241] = 0;
   out_9021355042514805664[242] = 1;
   out_9021355042514805664[243] = 0;
   out_9021355042514805664[244] = 0;
   out_9021355042514805664[245] = 0;
   out_9021355042514805664[246] = 0;
   out_9021355042514805664[247] = 0;
   out_9021355042514805664[248] = 0;
   out_9021355042514805664[249] = 0;
   out_9021355042514805664[250] = 0;
   out_9021355042514805664[251] = 0;
   out_9021355042514805664[252] = 0;
   out_9021355042514805664[253] = 0;
   out_9021355042514805664[254] = 0;
   out_9021355042514805664[255] = 0;
   out_9021355042514805664[256] = 0;
   out_9021355042514805664[257] = 0;
   out_9021355042514805664[258] = 0;
   out_9021355042514805664[259] = 0;
   out_9021355042514805664[260] = 0;
   out_9021355042514805664[261] = 0;
   out_9021355042514805664[262] = 0;
   out_9021355042514805664[263] = 0;
   out_9021355042514805664[264] = 1;
   out_9021355042514805664[265] = 0;
   out_9021355042514805664[266] = 0;
   out_9021355042514805664[267] = 0;
   out_9021355042514805664[268] = 0;
   out_9021355042514805664[269] = 0;
   out_9021355042514805664[270] = 0;
   out_9021355042514805664[271] = 0;
   out_9021355042514805664[272] = 0;
   out_9021355042514805664[273] = 0;
   out_9021355042514805664[274] = 0;
   out_9021355042514805664[275] = 0;
   out_9021355042514805664[276] = 0;
   out_9021355042514805664[277] = 0;
   out_9021355042514805664[278] = 0;
   out_9021355042514805664[279] = 0;
   out_9021355042514805664[280] = 0;
   out_9021355042514805664[281] = 0;
   out_9021355042514805664[282] = 0;
   out_9021355042514805664[283] = 0;
   out_9021355042514805664[284] = 0;
   out_9021355042514805664[285] = 0;
   out_9021355042514805664[286] = 1;
   out_9021355042514805664[287] = 0;
   out_9021355042514805664[288] = 0;
   out_9021355042514805664[289] = 0;
   out_9021355042514805664[290] = 0;
   out_9021355042514805664[291] = 0;
   out_9021355042514805664[292] = 0;
   out_9021355042514805664[293] = 0;
   out_9021355042514805664[294] = 0;
   out_9021355042514805664[295] = 0;
   out_9021355042514805664[296] = 0;
   out_9021355042514805664[297] = 0;
   out_9021355042514805664[298] = 0;
   out_9021355042514805664[299] = 0;
   out_9021355042514805664[300] = 0;
   out_9021355042514805664[301] = 0;
   out_9021355042514805664[302] = 0;
   out_9021355042514805664[303] = 0;
   out_9021355042514805664[304] = 0;
   out_9021355042514805664[305] = 0;
   out_9021355042514805664[306] = 0;
   out_9021355042514805664[307] = 0;
   out_9021355042514805664[308] = 1;
   out_9021355042514805664[309] = 0;
   out_9021355042514805664[310] = 0;
   out_9021355042514805664[311] = 0;
   out_9021355042514805664[312] = 0;
   out_9021355042514805664[313] = 0;
   out_9021355042514805664[314] = 0;
   out_9021355042514805664[315] = 0;
   out_9021355042514805664[316] = 0;
   out_9021355042514805664[317] = 0;
   out_9021355042514805664[318] = 0;
   out_9021355042514805664[319] = 0;
   out_9021355042514805664[320] = 0;
   out_9021355042514805664[321] = 0;
   out_9021355042514805664[322] = 0;
   out_9021355042514805664[323] = 0;
   out_9021355042514805664[324] = 0;
   out_9021355042514805664[325] = 0;
   out_9021355042514805664[326] = 0;
   out_9021355042514805664[327] = 0;
   out_9021355042514805664[328] = 0;
   out_9021355042514805664[329] = 0;
   out_9021355042514805664[330] = 1;
   out_9021355042514805664[331] = 0;
   out_9021355042514805664[332] = 0;
   out_9021355042514805664[333] = 0;
   out_9021355042514805664[334] = 0;
   out_9021355042514805664[335] = 0;
   out_9021355042514805664[336] = 0;
   out_9021355042514805664[337] = 0;
   out_9021355042514805664[338] = 0;
   out_9021355042514805664[339] = 0;
   out_9021355042514805664[340] = 0;
   out_9021355042514805664[341] = 0;
   out_9021355042514805664[342] = 0;
   out_9021355042514805664[343] = 0;
   out_9021355042514805664[344] = 0;
   out_9021355042514805664[345] = 0;
   out_9021355042514805664[346] = 0;
   out_9021355042514805664[347] = 0;
   out_9021355042514805664[348] = 0;
   out_9021355042514805664[349] = 0;
   out_9021355042514805664[350] = 0;
   out_9021355042514805664[351] = 0;
   out_9021355042514805664[352] = 1;
   out_9021355042514805664[353] = 0;
   out_9021355042514805664[354] = 0;
   out_9021355042514805664[355] = 0;
   out_9021355042514805664[356] = 0;
   out_9021355042514805664[357] = 0;
   out_9021355042514805664[358] = 0;
   out_9021355042514805664[359] = 0;
   out_9021355042514805664[360] = 0;
   out_9021355042514805664[361] = 0;
   out_9021355042514805664[362] = 0;
   out_9021355042514805664[363] = 0;
   out_9021355042514805664[364] = 0;
   out_9021355042514805664[365] = 0;
   out_9021355042514805664[366] = 0;
   out_9021355042514805664[367] = 0;
   out_9021355042514805664[368] = 0;
   out_9021355042514805664[369] = 0;
   out_9021355042514805664[370] = 0;
   out_9021355042514805664[371] = 0;
   out_9021355042514805664[372] = 0;
   out_9021355042514805664[373] = 0;
   out_9021355042514805664[374] = 1;
   out_9021355042514805664[375] = 0;
   out_9021355042514805664[376] = 0;
   out_9021355042514805664[377] = 0;
   out_9021355042514805664[378] = 0;
   out_9021355042514805664[379] = 0;
   out_9021355042514805664[380] = 0;
   out_9021355042514805664[381] = 0;
   out_9021355042514805664[382] = 0;
   out_9021355042514805664[383] = 0;
   out_9021355042514805664[384] = 0;
   out_9021355042514805664[385] = 0;
   out_9021355042514805664[386] = 0;
   out_9021355042514805664[387] = 0;
   out_9021355042514805664[388] = 0;
   out_9021355042514805664[389] = 0;
   out_9021355042514805664[390] = 0;
   out_9021355042514805664[391] = 0;
   out_9021355042514805664[392] = 0;
   out_9021355042514805664[393] = 0;
   out_9021355042514805664[394] = 0;
   out_9021355042514805664[395] = 0;
   out_9021355042514805664[396] = 1;
   out_9021355042514805664[397] = 0;
   out_9021355042514805664[398] = 0;
   out_9021355042514805664[399] = 0;
   out_9021355042514805664[400] = 0;
   out_9021355042514805664[401] = 0;
   out_9021355042514805664[402] = 0;
   out_9021355042514805664[403] = 0;
   out_9021355042514805664[404] = 0;
   out_9021355042514805664[405] = 0;
   out_9021355042514805664[406] = 0;
   out_9021355042514805664[407] = 0;
   out_9021355042514805664[408] = 0;
   out_9021355042514805664[409] = 0;
   out_9021355042514805664[410] = 0;
   out_9021355042514805664[411] = 0;
   out_9021355042514805664[412] = 0;
   out_9021355042514805664[413] = 0;
   out_9021355042514805664[414] = 0;
   out_9021355042514805664[415] = 0;
   out_9021355042514805664[416] = 0;
   out_9021355042514805664[417] = 0;
   out_9021355042514805664[418] = 1;
   out_9021355042514805664[419] = 0;
   out_9021355042514805664[420] = 0;
   out_9021355042514805664[421] = 0;
   out_9021355042514805664[422] = 0;
   out_9021355042514805664[423] = 0;
   out_9021355042514805664[424] = 0;
   out_9021355042514805664[425] = 0;
   out_9021355042514805664[426] = 0;
   out_9021355042514805664[427] = 0;
   out_9021355042514805664[428] = 0;
   out_9021355042514805664[429] = 0;
   out_9021355042514805664[430] = 0;
   out_9021355042514805664[431] = 0;
   out_9021355042514805664[432] = 0;
   out_9021355042514805664[433] = 0;
   out_9021355042514805664[434] = 0;
   out_9021355042514805664[435] = 0;
   out_9021355042514805664[436] = 0;
   out_9021355042514805664[437] = 0;
   out_9021355042514805664[438] = 0;
   out_9021355042514805664[439] = 0;
   out_9021355042514805664[440] = 1;
}
void h_4(double *state, double *unused, double *out_1356980630295645182) {
   out_1356980630295645182[0] = state[10] + state[13];
   out_1356980630295645182[1] = state[11] + state[14];
   out_1356980630295645182[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8979306753825182228) {
   out_8979306753825182228[0] = 0;
   out_8979306753825182228[1] = 0;
   out_8979306753825182228[2] = 0;
   out_8979306753825182228[3] = 0;
   out_8979306753825182228[4] = 0;
   out_8979306753825182228[5] = 0;
   out_8979306753825182228[6] = 0;
   out_8979306753825182228[7] = 0;
   out_8979306753825182228[8] = 0;
   out_8979306753825182228[9] = 0;
   out_8979306753825182228[10] = 1;
   out_8979306753825182228[11] = 0;
   out_8979306753825182228[12] = 0;
   out_8979306753825182228[13] = 1;
   out_8979306753825182228[14] = 0;
   out_8979306753825182228[15] = 0;
   out_8979306753825182228[16] = 0;
   out_8979306753825182228[17] = 0;
   out_8979306753825182228[18] = 0;
   out_8979306753825182228[19] = 0;
   out_8979306753825182228[20] = 0;
   out_8979306753825182228[21] = 0;
   out_8979306753825182228[22] = 0;
   out_8979306753825182228[23] = 0;
   out_8979306753825182228[24] = 0;
   out_8979306753825182228[25] = 0;
   out_8979306753825182228[26] = 0;
   out_8979306753825182228[27] = 0;
   out_8979306753825182228[28] = 0;
   out_8979306753825182228[29] = 0;
   out_8979306753825182228[30] = 0;
   out_8979306753825182228[31] = 0;
   out_8979306753825182228[32] = 0;
   out_8979306753825182228[33] = 1;
   out_8979306753825182228[34] = 0;
   out_8979306753825182228[35] = 0;
   out_8979306753825182228[36] = 1;
   out_8979306753825182228[37] = 0;
   out_8979306753825182228[38] = 0;
   out_8979306753825182228[39] = 0;
   out_8979306753825182228[40] = 0;
   out_8979306753825182228[41] = 0;
   out_8979306753825182228[42] = 0;
   out_8979306753825182228[43] = 0;
   out_8979306753825182228[44] = 0;
   out_8979306753825182228[45] = 0;
   out_8979306753825182228[46] = 0;
   out_8979306753825182228[47] = 0;
   out_8979306753825182228[48] = 0;
   out_8979306753825182228[49] = 0;
   out_8979306753825182228[50] = 0;
   out_8979306753825182228[51] = 0;
   out_8979306753825182228[52] = 0;
   out_8979306753825182228[53] = 0;
   out_8979306753825182228[54] = 0;
   out_8979306753825182228[55] = 0;
   out_8979306753825182228[56] = 1;
   out_8979306753825182228[57] = 0;
   out_8979306753825182228[58] = 0;
   out_8979306753825182228[59] = 1;
   out_8979306753825182228[60] = 0;
   out_8979306753825182228[61] = 0;
   out_8979306753825182228[62] = 0;
   out_8979306753825182228[63] = 0;
   out_8979306753825182228[64] = 0;
   out_8979306753825182228[65] = 0;
}
void h_9(double *state, double *unused, double *out_5605808899268505391) {
   out_5605808899268505391[0] = state[10];
   out_5605808899268505391[1] = state[11];
   out_5605808899268505391[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2180218384619921918) {
   out_2180218384619921918[0] = 0;
   out_2180218384619921918[1] = 0;
   out_2180218384619921918[2] = 0;
   out_2180218384619921918[3] = 0;
   out_2180218384619921918[4] = 0;
   out_2180218384619921918[5] = 0;
   out_2180218384619921918[6] = 0;
   out_2180218384619921918[7] = 0;
   out_2180218384619921918[8] = 0;
   out_2180218384619921918[9] = 0;
   out_2180218384619921918[10] = 1;
   out_2180218384619921918[11] = 0;
   out_2180218384619921918[12] = 0;
   out_2180218384619921918[13] = 0;
   out_2180218384619921918[14] = 0;
   out_2180218384619921918[15] = 0;
   out_2180218384619921918[16] = 0;
   out_2180218384619921918[17] = 0;
   out_2180218384619921918[18] = 0;
   out_2180218384619921918[19] = 0;
   out_2180218384619921918[20] = 0;
   out_2180218384619921918[21] = 0;
   out_2180218384619921918[22] = 0;
   out_2180218384619921918[23] = 0;
   out_2180218384619921918[24] = 0;
   out_2180218384619921918[25] = 0;
   out_2180218384619921918[26] = 0;
   out_2180218384619921918[27] = 0;
   out_2180218384619921918[28] = 0;
   out_2180218384619921918[29] = 0;
   out_2180218384619921918[30] = 0;
   out_2180218384619921918[31] = 0;
   out_2180218384619921918[32] = 0;
   out_2180218384619921918[33] = 1;
   out_2180218384619921918[34] = 0;
   out_2180218384619921918[35] = 0;
   out_2180218384619921918[36] = 0;
   out_2180218384619921918[37] = 0;
   out_2180218384619921918[38] = 0;
   out_2180218384619921918[39] = 0;
   out_2180218384619921918[40] = 0;
   out_2180218384619921918[41] = 0;
   out_2180218384619921918[42] = 0;
   out_2180218384619921918[43] = 0;
   out_2180218384619921918[44] = 0;
   out_2180218384619921918[45] = 0;
   out_2180218384619921918[46] = 0;
   out_2180218384619921918[47] = 0;
   out_2180218384619921918[48] = 0;
   out_2180218384619921918[49] = 0;
   out_2180218384619921918[50] = 0;
   out_2180218384619921918[51] = 0;
   out_2180218384619921918[52] = 0;
   out_2180218384619921918[53] = 0;
   out_2180218384619921918[54] = 0;
   out_2180218384619921918[55] = 0;
   out_2180218384619921918[56] = 1;
   out_2180218384619921918[57] = 0;
   out_2180218384619921918[58] = 0;
   out_2180218384619921918[59] = 0;
   out_2180218384619921918[60] = 0;
   out_2180218384619921918[61] = 0;
   out_2180218384619921918[62] = 0;
   out_2180218384619921918[63] = 0;
   out_2180218384619921918[64] = 0;
   out_2180218384619921918[65] = 0;
}
void h_10(double *state, double *unused, double *out_1990170345022901519) {
   out_1990170345022901519[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1990170345022901519[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1990170345022901519[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3601392890603494076) {
   out_3601392890603494076[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3601392890603494076[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3601392890603494076[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3601392890603494076[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3601392890603494076[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3601392890603494076[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3601392890603494076[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3601392890603494076[7] = 0;
   out_3601392890603494076[8] = 0;
   out_3601392890603494076[9] = 0;
   out_3601392890603494076[10] = 0;
   out_3601392890603494076[11] = 0;
   out_3601392890603494076[12] = 0;
   out_3601392890603494076[13] = 0;
   out_3601392890603494076[14] = 0;
   out_3601392890603494076[15] = 0;
   out_3601392890603494076[16] = 1;
   out_3601392890603494076[17] = 0;
   out_3601392890603494076[18] = 0;
   out_3601392890603494076[19] = 1;
   out_3601392890603494076[20] = 0;
   out_3601392890603494076[21] = 0;
   out_3601392890603494076[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3601392890603494076[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3601392890603494076[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3601392890603494076[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3601392890603494076[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3601392890603494076[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3601392890603494076[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3601392890603494076[29] = 0;
   out_3601392890603494076[30] = 0;
   out_3601392890603494076[31] = 0;
   out_3601392890603494076[32] = 0;
   out_3601392890603494076[33] = 0;
   out_3601392890603494076[34] = 0;
   out_3601392890603494076[35] = 0;
   out_3601392890603494076[36] = 0;
   out_3601392890603494076[37] = 0;
   out_3601392890603494076[38] = 0;
   out_3601392890603494076[39] = 1;
   out_3601392890603494076[40] = 0;
   out_3601392890603494076[41] = 0;
   out_3601392890603494076[42] = 1;
   out_3601392890603494076[43] = 0;
   out_3601392890603494076[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3601392890603494076[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3601392890603494076[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3601392890603494076[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3601392890603494076[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3601392890603494076[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3601392890603494076[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3601392890603494076[51] = 0;
   out_3601392890603494076[52] = 0;
   out_3601392890603494076[53] = 0;
   out_3601392890603494076[54] = 0;
   out_3601392890603494076[55] = 0;
   out_3601392890603494076[56] = 0;
   out_3601392890603494076[57] = 0;
   out_3601392890603494076[58] = 0;
   out_3601392890603494076[59] = 0;
   out_3601392890603494076[60] = 0;
   out_3601392890603494076[61] = 0;
   out_3601392890603494076[62] = 1;
   out_3601392890603494076[63] = 0;
   out_3601392890603494076[64] = 0;
   out_3601392890603494076[65] = 1;
}
void h_12(double *state, double *unused, double *out_2423697160155285196) {
   out_2423697160155285196[0] = state[0];
   out_2423697160155285196[1] = state[1];
   out_2423697160155285196[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1800309006201918896) {
   out_1800309006201918896[0] = 1;
   out_1800309006201918896[1] = 0;
   out_1800309006201918896[2] = 0;
   out_1800309006201918896[3] = 0;
   out_1800309006201918896[4] = 0;
   out_1800309006201918896[5] = 0;
   out_1800309006201918896[6] = 0;
   out_1800309006201918896[7] = 0;
   out_1800309006201918896[8] = 0;
   out_1800309006201918896[9] = 0;
   out_1800309006201918896[10] = 0;
   out_1800309006201918896[11] = 0;
   out_1800309006201918896[12] = 0;
   out_1800309006201918896[13] = 0;
   out_1800309006201918896[14] = 0;
   out_1800309006201918896[15] = 0;
   out_1800309006201918896[16] = 0;
   out_1800309006201918896[17] = 0;
   out_1800309006201918896[18] = 0;
   out_1800309006201918896[19] = 0;
   out_1800309006201918896[20] = 0;
   out_1800309006201918896[21] = 0;
   out_1800309006201918896[22] = 0;
   out_1800309006201918896[23] = 1;
   out_1800309006201918896[24] = 0;
   out_1800309006201918896[25] = 0;
   out_1800309006201918896[26] = 0;
   out_1800309006201918896[27] = 0;
   out_1800309006201918896[28] = 0;
   out_1800309006201918896[29] = 0;
   out_1800309006201918896[30] = 0;
   out_1800309006201918896[31] = 0;
   out_1800309006201918896[32] = 0;
   out_1800309006201918896[33] = 0;
   out_1800309006201918896[34] = 0;
   out_1800309006201918896[35] = 0;
   out_1800309006201918896[36] = 0;
   out_1800309006201918896[37] = 0;
   out_1800309006201918896[38] = 0;
   out_1800309006201918896[39] = 0;
   out_1800309006201918896[40] = 0;
   out_1800309006201918896[41] = 0;
   out_1800309006201918896[42] = 0;
   out_1800309006201918896[43] = 0;
   out_1800309006201918896[44] = 0;
   out_1800309006201918896[45] = 0;
   out_1800309006201918896[46] = 1;
   out_1800309006201918896[47] = 0;
   out_1800309006201918896[48] = 0;
   out_1800309006201918896[49] = 0;
   out_1800309006201918896[50] = 0;
   out_1800309006201918896[51] = 0;
   out_1800309006201918896[52] = 0;
   out_1800309006201918896[53] = 0;
   out_1800309006201918896[54] = 0;
   out_1800309006201918896[55] = 0;
   out_1800309006201918896[56] = 0;
   out_1800309006201918896[57] = 0;
   out_1800309006201918896[58] = 0;
   out_1800309006201918896[59] = 0;
   out_1800309006201918896[60] = 0;
   out_1800309006201918896[61] = 0;
   out_1800309006201918896[62] = 0;
   out_1800309006201918896[63] = 0;
   out_1800309006201918896[64] = 0;
   out_1800309006201918896[65] = 0;
}
void h_35(double *state, double *unused, double *out_8299251158518133531) {
   out_8299251158518133531[0] = state[7];
   out_8299251158518133531[1] = state[8];
   out_8299251158518133531[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6100775262511762012) {
   out_6100775262511762012[0] = 0;
   out_6100775262511762012[1] = 0;
   out_6100775262511762012[2] = 0;
   out_6100775262511762012[3] = 0;
   out_6100775262511762012[4] = 0;
   out_6100775262511762012[5] = 0;
   out_6100775262511762012[6] = 0;
   out_6100775262511762012[7] = 1;
   out_6100775262511762012[8] = 0;
   out_6100775262511762012[9] = 0;
   out_6100775262511762012[10] = 0;
   out_6100775262511762012[11] = 0;
   out_6100775262511762012[12] = 0;
   out_6100775262511762012[13] = 0;
   out_6100775262511762012[14] = 0;
   out_6100775262511762012[15] = 0;
   out_6100775262511762012[16] = 0;
   out_6100775262511762012[17] = 0;
   out_6100775262511762012[18] = 0;
   out_6100775262511762012[19] = 0;
   out_6100775262511762012[20] = 0;
   out_6100775262511762012[21] = 0;
   out_6100775262511762012[22] = 0;
   out_6100775262511762012[23] = 0;
   out_6100775262511762012[24] = 0;
   out_6100775262511762012[25] = 0;
   out_6100775262511762012[26] = 0;
   out_6100775262511762012[27] = 0;
   out_6100775262511762012[28] = 0;
   out_6100775262511762012[29] = 0;
   out_6100775262511762012[30] = 1;
   out_6100775262511762012[31] = 0;
   out_6100775262511762012[32] = 0;
   out_6100775262511762012[33] = 0;
   out_6100775262511762012[34] = 0;
   out_6100775262511762012[35] = 0;
   out_6100775262511762012[36] = 0;
   out_6100775262511762012[37] = 0;
   out_6100775262511762012[38] = 0;
   out_6100775262511762012[39] = 0;
   out_6100775262511762012[40] = 0;
   out_6100775262511762012[41] = 0;
   out_6100775262511762012[42] = 0;
   out_6100775262511762012[43] = 0;
   out_6100775262511762012[44] = 0;
   out_6100775262511762012[45] = 0;
   out_6100775262511762012[46] = 0;
   out_6100775262511762012[47] = 0;
   out_6100775262511762012[48] = 0;
   out_6100775262511762012[49] = 0;
   out_6100775262511762012[50] = 0;
   out_6100775262511762012[51] = 0;
   out_6100775262511762012[52] = 0;
   out_6100775262511762012[53] = 1;
   out_6100775262511762012[54] = 0;
   out_6100775262511762012[55] = 0;
   out_6100775262511762012[56] = 0;
   out_6100775262511762012[57] = 0;
   out_6100775262511762012[58] = 0;
   out_6100775262511762012[59] = 0;
   out_6100775262511762012[60] = 0;
   out_6100775262511762012[61] = 0;
   out_6100775262511762012[62] = 0;
   out_6100775262511762012[63] = 0;
   out_6100775262511762012[64] = 0;
   out_6100775262511762012[65] = 0;
}
void h_32(double *state, double *unused, double *out_3487178591502051074) {
   out_3487178591502051074[0] = state[3];
   out_3487178591502051074[1] = state[4];
   out_3487178591502051074[2] = state[5];
   out_3487178591502051074[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6746558398330707371) {
   out_6746558398330707371[0] = 0;
   out_6746558398330707371[1] = 0;
   out_6746558398330707371[2] = 0;
   out_6746558398330707371[3] = 1;
   out_6746558398330707371[4] = 0;
   out_6746558398330707371[5] = 0;
   out_6746558398330707371[6] = 0;
   out_6746558398330707371[7] = 0;
   out_6746558398330707371[8] = 0;
   out_6746558398330707371[9] = 0;
   out_6746558398330707371[10] = 0;
   out_6746558398330707371[11] = 0;
   out_6746558398330707371[12] = 0;
   out_6746558398330707371[13] = 0;
   out_6746558398330707371[14] = 0;
   out_6746558398330707371[15] = 0;
   out_6746558398330707371[16] = 0;
   out_6746558398330707371[17] = 0;
   out_6746558398330707371[18] = 0;
   out_6746558398330707371[19] = 0;
   out_6746558398330707371[20] = 0;
   out_6746558398330707371[21] = 0;
   out_6746558398330707371[22] = 0;
   out_6746558398330707371[23] = 0;
   out_6746558398330707371[24] = 0;
   out_6746558398330707371[25] = 0;
   out_6746558398330707371[26] = 1;
   out_6746558398330707371[27] = 0;
   out_6746558398330707371[28] = 0;
   out_6746558398330707371[29] = 0;
   out_6746558398330707371[30] = 0;
   out_6746558398330707371[31] = 0;
   out_6746558398330707371[32] = 0;
   out_6746558398330707371[33] = 0;
   out_6746558398330707371[34] = 0;
   out_6746558398330707371[35] = 0;
   out_6746558398330707371[36] = 0;
   out_6746558398330707371[37] = 0;
   out_6746558398330707371[38] = 0;
   out_6746558398330707371[39] = 0;
   out_6746558398330707371[40] = 0;
   out_6746558398330707371[41] = 0;
   out_6746558398330707371[42] = 0;
   out_6746558398330707371[43] = 0;
   out_6746558398330707371[44] = 0;
   out_6746558398330707371[45] = 0;
   out_6746558398330707371[46] = 0;
   out_6746558398330707371[47] = 0;
   out_6746558398330707371[48] = 0;
   out_6746558398330707371[49] = 1;
   out_6746558398330707371[50] = 0;
   out_6746558398330707371[51] = 0;
   out_6746558398330707371[52] = 0;
   out_6746558398330707371[53] = 0;
   out_6746558398330707371[54] = 0;
   out_6746558398330707371[55] = 0;
   out_6746558398330707371[56] = 0;
   out_6746558398330707371[57] = 0;
   out_6746558398330707371[58] = 0;
   out_6746558398330707371[59] = 0;
   out_6746558398330707371[60] = 0;
   out_6746558398330707371[61] = 0;
   out_6746558398330707371[62] = 0;
   out_6746558398330707371[63] = 0;
   out_6746558398330707371[64] = 0;
   out_6746558398330707371[65] = 0;
   out_6746558398330707371[66] = 0;
   out_6746558398330707371[67] = 0;
   out_6746558398330707371[68] = 0;
   out_6746558398330707371[69] = 0;
   out_6746558398330707371[70] = 0;
   out_6746558398330707371[71] = 0;
   out_6746558398330707371[72] = 1;
   out_6746558398330707371[73] = 0;
   out_6746558398330707371[74] = 0;
   out_6746558398330707371[75] = 0;
   out_6746558398330707371[76] = 0;
   out_6746558398330707371[77] = 0;
   out_6746558398330707371[78] = 0;
   out_6746558398330707371[79] = 0;
   out_6746558398330707371[80] = 0;
   out_6746558398330707371[81] = 0;
   out_6746558398330707371[82] = 0;
   out_6746558398330707371[83] = 0;
   out_6746558398330707371[84] = 0;
   out_6746558398330707371[85] = 0;
   out_6746558398330707371[86] = 0;
   out_6746558398330707371[87] = 0;
}
void h_13(double *state, double *unused, double *out_255412017322975092) {
   out_255412017322975092[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_255412017322975092[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_255412017322975092[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2514018880265918871) {
   out_2514018880265918871[0] = 0;
   out_2514018880265918871[1] = 0;
   out_2514018880265918871[2] = 0;
   out_2514018880265918871[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2514018880265918871[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2514018880265918871[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2514018880265918871[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2514018880265918871[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2514018880265918871[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2514018880265918871[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2514018880265918871[10] = 0;
   out_2514018880265918871[11] = 0;
   out_2514018880265918871[12] = 0;
   out_2514018880265918871[13] = 0;
   out_2514018880265918871[14] = 0;
   out_2514018880265918871[15] = 0;
   out_2514018880265918871[16] = 0;
   out_2514018880265918871[17] = 0;
   out_2514018880265918871[18] = 0;
   out_2514018880265918871[19] = 0;
   out_2514018880265918871[20] = 0;
   out_2514018880265918871[21] = 0;
   out_2514018880265918871[22] = 0;
   out_2514018880265918871[23] = 0;
   out_2514018880265918871[24] = 0;
   out_2514018880265918871[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2514018880265918871[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2514018880265918871[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2514018880265918871[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2514018880265918871[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2514018880265918871[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2514018880265918871[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2514018880265918871[32] = 0;
   out_2514018880265918871[33] = 0;
   out_2514018880265918871[34] = 0;
   out_2514018880265918871[35] = 0;
   out_2514018880265918871[36] = 0;
   out_2514018880265918871[37] = 0;
   out_2514018880265918871[38] = 0;
   out_2514018880265918871[39] = 0;
   out_2514018880265918871[40] = 0;
   out_2514018880265918871[41] = 0;
   out_2514018880265918871[42] = 0;
   out_2514018880265918871[43] = 0;
   out_2514018880265918871[44] = 0;
   out_2514018880265918871[45] = 0;
   out_2514018880265918871[46] = 0;
   out_2514018880265918871[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2514018880265918871[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2514018880265918871[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2514018880265918871[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2514018880265918871[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2514018880265918871[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2514018880265918871[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2514018880265918871[54] = 0;
   out_2514018880265918871[55] = 0;
   out_2514018880265918871[56] = 0;
   out_2514018880265918871[57] = 0;
   out_2514018880265918871[58] = 0;
   out_2514018880265918871[59] = 0;
   out_2514018880265918871[60] = 0;
   out_2514018880265918871[61] = 0;
   out_2514018880265918871[62] = 0;
   out_2514018880265918871[63] = 0;
   out_2514018880265918871[64] = 0;
   out_2514018880265918871[65] = 0;
}
void h_14(double *state, double *unused, double *out_5605808899268505391) {
   out_5605808899268505391[0] = state[10];
   out_5605808899268505391[1] = state[11];
   out_5605808899268505391[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2180218384619921918) {
   out_2180218384619921918[0] = 0;
   out_2180218384619921918[1] = 0;
   out_2180218384619921918[2] = 0;
   out_2180218384619921918[3] = 0;
   out_2180218384619921918[4] = 0;
   out_2180218384619921918[5] = 0;
   out_2180218384619921918[6] = 0;
   out_2180218384619921918[7] = 0;
   out_2180218384619921918[8] = 0;
   out_2180218384619921918[9] = 0;
   out_2180218384619921918[10] = 1;
   out_2180218384619921918[11] = 0;
   out_2180218384619921918[12] = 0;
   out_2180218384619921918[13] = 0;
   out_2180218384619921918[14] = 0;
   out_2180218384619921918[15] = 0;
   out_2180218384619921918[16] = 0;
   out_2180218384619921918[17] = 0;
   out_2180218384619921918[18] = 0;
   out_2180218384619921918[19] = 0;
   out_2180218384619921918[20] = 0;
   out_2180218384619921918[21] = 0;
   out_2180218384619921918[22] = 0;
   out_2180218384619921918[23] = 0;
   out_2180218384619921918[24] = 0;
   out_2180218384619921918[25] = 0;
   out_2180218384619921918[26] = 0;
   out_2180218384619921918[27] = 0;
   out_2180218384619921918[28] = 0;
   out_2180218384619921918[29] = 0;
   out_2180218384619921918[30] = 0;
   out_2180218384619921918[31] = 0;
   out_2180218384619921918[32] = 0;
   out_2180218384619921918[33] = 1;
   out_2180218384619921918[34] = 0;
   out_2180218384619921918[35] = 0;
   out_2180218384619921918[36] = 0;
   out_2180218384619921918[37] = 0;
   out_2180218384619921918[38] = 0;
   out_2180218384619921918[39] = 0;
   out_2180218384619921918[40] = 0;
   out_2180218384619921918[41] = 0;
   out_2180218384619921918[42] = 0;
   out_2180218384619921918[43] = 0;
   out_2180218384619921918[44] = 0;
   out_2180218384619921918[45] = 0;
   out_2180218384619921918[46] = 0;
   out_2180218384619921918[47] = 0;
   out_2180218384619921918[48] = 0;
   out_2180218384619921918[49] = 0;
   out_2180218384619921918[50] = 0;
   out_2180218384619921918[51] = 0;
   out_2180218384619921918[52] = 0;
   out_2180218384619921918[53] = 0;
   out_2180218384619921918[54] = 0;
   out_2180218384619921918[55] = 0;
   out_2180218384619921918[56] = 1;
   out_2180218384619921918[57] = 0;
   out_2180218384619921918[58] = 0;
   out_2180218384619921918[59] = 0;
   out_2180218384619921918[60] = 0;
   out_2180218384619921918[61] = 0;
   out_2180218384619921918[62] = 0;
   out_2180218384619921918[63] = 0;
   out_2180218384619921918[64] = 0;
   out_2180218384619921918[65] = 0;
}
void h_33(double *state, double *unused, double *out_8254374040319119309) {
   out_8254374040319119309[0] = state[16];
   out_8254374040319119309[1] = state[17];
   out_8254374040319119309[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4095811030761952417) {
   out_4095811030761952417[0] = 0;
   out_4095811030761952417[1] = 0;
   out_4095811030761952417[2] = 0;
   out_4095811030761952417[3] = 0;
   out_4095811030761952417[4] = 0;
   out_4095811030761952417[5] = 0;
   out_4095811030761952417[6] = 0;
   out_4095811030761952417[7] = 0;
   out_4095811030761952417[8] = 0;
   out_4095811030761952417[9] = 0;
   out_4095811030761952417[10] = 0;
   out_4095811030761952417[11] = 0;
   out_4095811030761952417[12] = 0;
   out_4095811030761952417[13] = 0;
   out_4095811030761952417[14] = 0;
   out_4095811030761952417[15] = 0;
   out_4095811030761952417[16] = 1;
   out_4095811030761952417[17] = 0;
   out_4095811030761952417[18] = 0;
   out_4095811030761952417[19] = 0;
   out_4095811030761952417[20] = 0;
   out_4095811030761952417[21] = 0;
   out_4095811030761952417[22] = 0;
   out_4095811030761952417[23] = 0;
   out_4095811030761952417[24] = 0;
   out_4095811030761952417[25] = 0;
   out_4095811030761952417[26] = 0;
   out_4095811030761952417[27] = 0;
   out_4095811030761952417[28] = 0;
   out_4095811030761952417[29] = 0;
   out_4095811030761952417[30] = 0;
   out_4095811030761952417[31] = 0;
   out_4095811030761952417[32] = 0;
   out_4095811030761952417[33] = 0;
   out_4095811030761952417[34] = 0;
   out_4095811030761952417[35] = 0;
   out_4095811030761952417[36] = 0;
   out_4095811030761952417[37] = 0;
   out_4095811030761952417[38] = 0;
   out_4095811030761952417[39] = 1;
   out_4095811030761952417[40] = 0;
   out_4095811030761952417[41] = 0;
   out_4095811030761952417[42] = 0;
   out_4095811030761952417[43] = 0;
   out_4095811030761952417[44] = 0;
   out_4095811030761952417[45] = 0;
   out_4095811030761952417[46] = 0;
   out_4095811030761952417[47] = 0;
   out_4095811030761952417[48] = 0;
   out_4095811030761952417[49] = 0;
   out_4095811030761952417[50] = 0;
   out_4095811030761952417[51] = 0;
   out_4095811030761952417[52] = 0;
   out_4095811030761952417[53] = 0;
   out_4095811030761952417[54] = 0;
   out_4095811030761952417[55] = 0;
   out_4095811030761952417[56] = 0;
   out_4095811030761952417[57] = 0;
   out_4095811030761952417[58] = 0;
   out_4095811030761952417[59] = 0;
   out_4095811030761952417[60] = 0;
   out_4095811030761952417[61] = 0;
   out_4095811030761952417[62] = 1;
   out_4095811030761952417[63] = 0;
   out_4095811030761952417[64] = 0;
   out_4095811030761952417[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1273177161694806375) {
  H(in_vec, out_1273177161694806375);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1430031797466046139) {
  err_fun(nom_x, delta_x, out_1430031797466046139);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4212555668691755734) {
  inv_err_fun(nom_x, true_x, out_4212555668691755734);
}
void live_H_mod_fun(double *state, double *out_5495397011748731228) {
  H_mod_fun(state, out_5495397011748731228);
}
void live_f_fun(double *state, double dt, double *out_7830183483826484002) {
  f_fun(state,  dt, out_7830183483826484002);
}
void live_F_fun(double *state, double dt, double *out_9021355042514805664) {
  F_fun(state,  dt, out_9021355042514805664);
}
void live_h_4(double *state, double *unused, double *out_1356980630295645182) {
  h_4(state, unused, out_1356980630295645182);
}
void live_H_4(double *state, double *unused, double *out_8979306753825182228) {
  H_4(state, unused, out_8979306753825182228);
}
void live_h_9(double *state, double *unused, double *out_5605808899268505391) {
  h_9(state, unused, out_5605808899268505391);
}
void live_H_9(double *state, double *unused, double *out_2180218384619921918) {
  H_9(state, unused, out_2180218384619921918);
}
void live_h_10(double *state, double *unused, double *out_1990170345022901519) {
  h_10(state, unused, out_1990170345022901519);
}
void live_H_10(double *state, double *unused, double *out_3601392890603494076) {
  H_10(state, unused, out_3601392890603494076);
}
void live_h_12(double *state, double *unused, double *out_2423697160155285196) {
  h_12(state, unused, out_2423697160155285196);
}
void live_H_12(double *state, double *unused, double *out_1800309006201918896) {
  H_12(state, unused, out_1800309006201918896);
}
void live_h_35(double *state, double *unused, double *out_8299251158518133531) {
  h_35(state, unused, out_8299251158518133531);
}
void live_H_35(double *state, double *unused, double *out_6100775262511762012) {
  H_35(state, unused, out_6100775262511762012);
}
void live_h_32(double *state, double *unused, double *out_3487178591502051074) {
  h_32(state, unused, out_3487178591502051074);
}
void live_H_32(double *state, double *unused, double *out_6746558398330707371) {
  H_32(state, unused, out_6746558398330707371);
}
void live_h_13(double *state, double *unused, double *out_255412017322975092) {
  h_13(state, unused, out_255412017322975092);
}
void live_H_13(double *state, double *unused, double *out_2514018880265918871) {
  H_13(state, unused, out_2514018880265918871);
}
void live_h_14(double *state, double *unused, double *out_5605808899268505391) {
  h_14(state, unused, out_5605808899268505391);
}
void live_H_14(double *state, double *unused, double *out_2180218384619921918) {
  H_14(state, unused, out_2180218384619921918);
}
void live_h_33(double *state, double *unused, double *out_8254374040319119309) {
  h_33(state, unused, out_8254374040319119309);
}
void live_H_33(double *state, double *unused, double *out_4095811030761952417) {
  H_33(state, unused, out_4095811030761952417);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
